 --
 -- Copyright (C) 2019 - present Instructure, Inc.
 --
 --     Licensed under the Apache License, Version 2.0 (the "License");
 --     you may not use this file except in compliance with the License.
 --     You may obtain a copy of the License at
 --
 --     http://www.apache.org/licenses/LICENSE-2.0
 --
 --     Unless required by applicable law or agreed to in writing, software
 --     distributed under the License is distributed on an "AS IS" BASIS,
 --     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 --     See the License for the specific language governing permissions and
 --     limitations under the License.
 --

import com.instructure.canvasapi2.models.CanvasContext;
import com.instructure.student.db.sqlColAdapters.Date;
import com.instructure.student.db.sqlColAdapters.ErrorColAdapter;

CREATE TABLE submission (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    submissionEntry TEXT, -- Text, URL, or a URI pointing to a file
    lastActivityDate TEXT as Date, -- Uploaded on, or day/time the upload failed
    assignmentName TEXT,
--     mediaCommentId TEXT,  -- Media submissions
--     mediaCommentType TEXT,
    assignmentId INTEGER,
    canvasContext TEXT as CanvasContext,
    submissionType TEXT,
    errorFlag INTEGER as Boolean NOT NULL DEFAULT 0,
    assignmentGroupCategoryId INTEGER
);

insertOnlineTextSubmission:
INSERT INTO submission (submissionEntry, assignmentName, assignmentId, canvasContext, submissionType)
VALUES (?, ?, ?, ?, "online_text_entry");

insertOnlineUrlSubmission:
INSERT INTO submission (submissionEntry, assignmentName, assignmentId, canvasContext, submissionType)
VALUES (?, ?, ?, ?, "online_url"); --"basic_lti_launch" else "online_url"

insertOnlineUploadSubmission:
INSERT INTO submission (assignmentName, assignmentId, assignmentGroupCategoryId, canvasContext, submissionType)
VALUES (?, ?, ?, ?, "online_upload");

insertMediaSubmission:
INSERT INTO submission(assignmentName, assignmentId, canvasContext, submissionType)
VALUES(?, ?, ?, ?);

getAllSubmissions:
SELECT *
FROM submission;

getSubmissionById:
SELECT *
FROM submission
WHERE id = ?;

getSubmissionsByAssignmentId:
SELECT *
FROM submission
WHERE assignmentId = ?;

deleteSubmissionById:
DELETE
FROM submission
WHERE id = ?;

setSubmissionError:
UPDATE submission
SET errorFlag = ?
WHERE id = ?;

getLastInsert:
SELECT last_insert_rowid();