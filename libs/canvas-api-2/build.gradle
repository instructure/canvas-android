/*
 * Copyright (C) 2017 - present Instructure, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */

apply plugin: 'com.android.library'
apply plugin: 'com.apollographql.apollo'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'au.com.dius.pact'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

static String isTesting() {
    if ( System.getenv("IS_TESTING") == "true" ) {
        "true"
    } else {
        "false"
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'au.com.dius:pact-jvm-provider-gradle:4.0.2'
    }
}

android {
    compileSdkVersion Versions.COMPILE_SDK
    buildToolsVersion Versions.BUILD_TOOLS

    defaultConfig {
        minSdkVersion Versions.MIN_SDK
        targetSdkVersion Versions.TARGET_SDK
        buildConfigField "boolean", "IS_TESTING", isTesting()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    hilt {
        enableAggregatingTask = false
    }
}

apollo {
    useJavaBeansSemanticNaming = true
    customTypeMapping = [
            "URL" : "java.lang.String",
            "DateTime": "java.util.Date",
            "ID"  : "java.lang.String"
    ]
}

dependencies {
    api project(path: ':pandares')

    /* Kotlin */
    implementation Libs.KOTLIN_STD_LIB
    api Libs.KOTLIN_COROUTINES_CORE
    api Libs.KOTLIN_COROUTINES_ANDROID
    testImplementation Libs.KOTLIN_COROUTINES_TEST

    /* Retrofit / GSON */
    api(Libs.RETROFIT) {
        exclude module: 'okhttp'
    }
    implementation Libs.GSON
    api Libs.RETROFIT_GSON_ADAPTER
    implementation(Libs.RETROFIT_XML_ADAPTER) {
        exclude module: 'stax-api'
        exclude module: 'stax'
        exclude module: 'xpp3'
    }

    /* OKHttp */
    implementation Libs.OKHTTP
    implementation Libs.OKHTTP_LOGGING
    implementation Libs.OKHTTP_URL_CONNECTION
    implementation Libs.OKIO

    /* GraphQL */
    /* NOTE: Newer versions of OkHttp affect the encoding of square brackets in @Query names. We're excluding the
    * okhttp module here to avoid updating to a newer version until we're ready to handle the change. */
    api(Libs.APOLLO_RUNTIME) {
        exclude module: 'okhttp'
    }
    api (Libs.APOLLO_ANDROID_SUPPORT) {
        exclude module: 'okhttp'
    }
    implementation (Libs.APOLLO_HTTP_CACHE) {
        exclude module: 'okhttp'
    }

    /* EventBus */
    api Libs.EVENTBUS

    /* Date/time/calendar */
    api Libs.JW_THREETEN_BP

    api Libs.PROCESS_PHOENIX

    /* Test Dependencies */
    testImplementation Libs.JUNIT
    testImplementation Libs.MOCKK
    testImplementation "org.mockito:mockito-inline:2.25.0"
    testImplementation "au.com.dius:pact-jvm-consumer-junit:4.0.7"
    testImplementation "au.com.dius:pact-jvm-consumer-java8:4.0.7"
    testImplementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.26'

    /* Support Libs */
    implementation Libs.ANDROIDX_APPCOMPAT
    implementation Libs.ANDROIDX_ANNOTATION

    /* Paper No SQl Storage */
    api Libs.PAPERDB

    // Firebase
    implementation platform(Libs.FIREBASE_BOM) {
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
    }
    implementation Libs.FIREBASE_CONFIG

    implementation Libs.HILT
    kapt Libs.HILT_COMPILER

    implementation Libs.ROOM
    kapt Libs.ROOM_COMPILER

    implementation Libs.HEAP
}

// Define our pact-publish object
// This is designed to be run as part of a bitrise job.  But, in a pinch, you could run it
// locally and manually fill in the required environment variable values.
// Also, keep in mind that this will publish ALL contracts in the pacts directory.  If you
// would like to publish a specific contract, make sure that you have some logic in place to
// remove the unwanted pact contracts before publishing.
pact {
    publish {
        pactDirectory = System.getenv("BITRISE_SOURCE_DIR") + '/libs/canvas-api-2/build/pacts'
        pactBrokerUrl = 'https://inst-pact-broker.inseng.net/'
        pactBrokerUsername = System.getenv("PACT_BROKER_USERNAME")
        pactBrokerPassword = System.getenv("PACT_BROKER_PASSWORD")
        tags = [System.getenv("BITRISE_GIT_BRANCH")]
        version = '1.0.' + System.getenv("BITRISE_BUILD_NUMBER")
    }
}
