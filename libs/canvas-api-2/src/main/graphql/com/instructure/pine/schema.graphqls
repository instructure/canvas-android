type DocumentResponse {
    id: String!
}

type RagResponse {
    response: String!
}

type Query {
    ping: String!
}

type Mutation {
    document(input: DocumentUpsertInput!): DocumentResponse!
    query(input: RagQueryInput!): RagResponse!
}

input DocumentUpsertInput {
    source: String!
    sourceType: String!
    sourceId: String!
    metadata: JSON!
    text: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input RagQueryInput {
    messages: [MessageInput!]!
    source: String!
    metadata: JSON!
}

input MessageInput {
    role: Role!
    text: String!
}

"""The role of the message sender"""
enum Role {
    """Message from the user"""
    User

    """Message from the assistant"""
    Assistant
}