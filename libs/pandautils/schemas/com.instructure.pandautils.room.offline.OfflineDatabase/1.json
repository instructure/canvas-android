{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "f792290082e6cf2f70533d168ec4901b",
    "entities": [
      {
        "tableName": "AssignmentDueDateEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`assignmentId` INTEGER NOT NULL, `assignmentOverrideId` INTEGER, `dueAt` TEXT, `title` TEXT, `unlockAt` TEXT, `lockAt` TEXT, `isBase` INTEGER NOT NULL, PRIMARY KEY(`assignmentId`), FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentOverrideId",
            "columnName": "assignmentOverrideId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dueAt",
            "columnName": "dueAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockAt",
            "columnName": "lockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isBase",
            "columnName": "isBase",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "assignmentId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AssignmentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT, `description` TEXT, `submissionTypesRaw` TEXT NOT NULL, `dueAt` TEXT, `pointsPossible` REAL NOT NULL, `courseId` INTEGER NOT NULL, `isGradeGroupsIndividually` INTEGER NOT NULL, `gradingType` TEXT, `needsGradingCount` INTEGER NOT NULL, `htmlUrl` TEXT, `url` TEXT, `quizId` INTEGER NOT NULL, `isUseRubricForGrading` INTEGER NOT NULL, `rubricSettingsId` INTEGER, `allowedExtensions` TEXT NOT NULL, `submissionId` INTEGER, `assignmentGroupId` INTEGER NOT NULL, `position` INTEGER NOT NULL, `isPeerReviews` INTEGER NOT NULL, `lockedForUser` INTEGER NOT NULL, `lockAt` TEXT, `unlockAt` TEXT, `lockExplanation` TEXT, `discussionTopicHeaderId` INTEGER, `freeFormCriterionComments` INTEGER NOT NULL, `published` INTEGER NOT NULL, `groupCategoryId` INTEGER NOT NULL, `userSubmitted` INTEGER NOT NULL, `unpublishable` INTEGER NOT NULL, `onlyVisibleToOverrides` INTEGER NOT NULL, `anonymousPeerReviews` INTEGER NOT NULL, `moderatedGrading` INTEGER NOT NULL, `anonymousGrading` INTEGER NOT NULL, `allowedAttempts` INTEGER NOT NULL, `plannerOverrideId` INTEGER, `isStudioEnabled` INTEGER NOT NULL, `inClosedGradingPeriod` INTEGER NOT NULL, `annotatableAttachmentId` INTEGER NOT NULL, `anonymousSubmissions` INTEGER NOT NULL, `omitFromFinalGrade` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`assignmentGroupId`) REFERENCES `AssignmentGroupEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "submissionTypesRaw",
            "columnName": "submissionTypesRaw",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dueAt",
            "columnName": "dueAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pointsPossible",
            "columnName": "pointsPossible",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isGradeGroupsIndividually",
            "columnName": "isGradeGroupsIndividually",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gradingType",
            "columnName": "gradingType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "needsGradingCount",
            "columnName": "needsGradingCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "quizId",
            "columnName": "quizId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isUseRubricForGrading",
            "columnName": "isUseRubricForGrading",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rubricSettingsId",
            "columnName": "rubricSettingsId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "allowedExtensions",
            "columnName": "allowedExtensions",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "submissionId",
            "columnName": "submissionId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "assignmentGroupId",
            "columnName": "assignmentGroupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPeerReviews",
            "columnName": "isPeerReviews",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockedForUser",
            "columnName": "lockedForUser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockAt",
            "columnName": "lockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockExplanation",
            "columnName": "lockExplanation",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "discussionTopicHeaderId",
            "columnName": "discussionTopicHeaderId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "freeFormCriterionComments",
            "columnName": "freeFormCriterionComments",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "published",
            "columnName": "published",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupCategoryId",
            "columnName": "groupCategoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userSubmitted",
            "columnName": "userSubmitted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unpublishable",
            "columnName": "unpublishable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "onlyVisibleToOverrides",
            "columnName": "onlyVisibleToOverrides",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "anonymousPeerReviews",
            "columnName": "anonymousPeerReviews",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "moderatedGrading",
            "columnName": "moderatedGrading",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "anonymousGrading",
            "columnName": "anonymousGrading",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allowedAttempts",
            "columnName": "allowedAttempts",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "plannerOverrideId",
            "columnName": "plannerOverrideId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isStudioEnabled",
            "columnName": "isStudioEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "inClosedGradingPeriod",
            "columnName": "inClosedGradingPeriod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "annotatableAttachmentId",
            "columnName": "annotatableAttachmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "anonymousSubmissions",
            "columnName": "anonymousSubmissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "omitFromFinalGrade",
            "columnName": "omitFromFinalGrade",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentGroupEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentGroupId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AssignmentGroupEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT, `position` INTEGER NOT NULL, `groupWeight` REAL NOT NULL, `rules` TEXT, `courseId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupWeight",
            "columnName": "groupWeight",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "rules",
            "columnName": "rules",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AssignmentOverrideEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `assignmentId` INTEGER NOT NULL, `title` TEXT, `dueAt` INTEGER, `isAllDay` INTEGER NOT NULL, `allDayDate` TEXT, `unlockAt` INTEGER, `lockAt` INTEGER, `courseSectionId` INTEGER NOT NULL, `groupId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dueAt",
            "columnName": "dueAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isAllDay",
            "columnName": "isAllDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allDayDate",
            "columnName": "allDayDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lockAt",
            "columnName": "lockAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "courseSectionId",
            "columnName": "courseSectionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupId",
            "columnName": "groupId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AssignmentRubricCriterionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`assignmentId` INTEGER NOT NULL, `rubricId` TEXT NOT NULL, PRIMARY KEY(`assignmentId`, `rubricId`), FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rubricId",
            "columnName": "rubricId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "assignmentId",
            "rubricId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AssignmentScoreStatisticsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`assignmentId` INTEGER NOT NULL, `mean` REAL NOT NULL, `min` REAL NOT NULL, `max` REAL NOT NULL, PRIMARY KEY(`assignmentId`), FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mean",
            "columnName": "mean",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "min",
            "columnName": "min",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "max",
            "columnName": "max",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "assignmentId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AssignmentSetEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `scoringRangeId` INTEGER NOT NULL, `createdAt` TEXT, `updatedAt` TEXT, `position` INTEGER NOT NULL, `masteryPathId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`masteryPathId`) REFERENCES `MasteryPathEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scoringRangeId",
            "columnName": "scoringRangeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "masteryPathId",
            "columnName": "masteryPathId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "MasteryPathEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "masteryPathId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "CourseEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `originalName` TEXT, `courseCode` TEXT, `startAt` TEXT, `endAt` TEXT, `syllabusBody` TEXT, `hideFinalGrades` INTEGER NOT NULL, `isPublic` INTEGER NOT NULL, `license` TEXT NOT NULL, `termId` INTEGER, `needsGradingCount` INTEGER NOT NULL, `isApplyAssignmentGroupWeights` INTEGER NOT NULL, `currentScore` REAL, `finalScore` REAL, `currentGrade` TEXT, `finalGrade` TEXT, `isFavorite` INTEGER NOT NULL, `accessRestrictedByDate` INTEGER NOT NULL, `imageUrl` TEXT, `bannerImageUrl` TEXT, `isWeightedGradingPeriods` INTEGER NOT NULL, `hasGradingPeriods` INTEGER NOT NULL, `homePage` TEXT, `restrictEnrollmentsToCourseDate` INTEGER NOT NULL, `workflowState` TEXT, `homeroomCourse` INTEGER NOT NULL, `courseColor` TEXT, `gradingScheme` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`termId`) REFERENCES `TermEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "originalName",
            "columnName": "originalName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseCode",
            "columnName": "courseCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startAt",
            "columnName": "startAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endAt",
            "columnName": "endAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "syllabusBody",
            "columnName": "syllabusBody",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hideFinalGrades",
            "columnName": "hideFinalGrades",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPublic",
            "columnName": "isPublic",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "license",
            "columnName": "license",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "termId",
            "columnName": "termId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "needsGradingCount",
            "columnName": "needsGradingCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isApplyAssignmentGroupWeights",
            "columnName": "isApplyAssignmentGroupWeights",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "currentScore",
            "columnName": "currentScore",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "finalScore",
            "columnName": "finalScore",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currentGrade",
            "columnName": "currentGrade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "finalGrade",
            "columnName": "finalGrade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accessRestrictedByDate",
            "columnName": "accessRestrictedByDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bannerImageUrl",
            "columnName": "bannerImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isWeightedGradingPeriods",
            "columnName": "isWeightedGradingPeriods",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hasGradingPeriods",
            "columnName": "hasGradingPeriods",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "homePage",
            "columnName": "homePage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "restrictEnrollmentsToCourseDate",
            "columnName": "restrictEnrollmentsToCourseDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workflowState",
            "columnName": "workflowState",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "homeroomCourse",
            "columnName": "homeroomCourse",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseColor",
            "columnName": "courseColor",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "gradingScheme",
            "columnName": "gradingScheme",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "TermEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "termId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "CourseFilesEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseId` INTEGER NOT NULL, `url` TEXT NOT NULL, PRIMARY KEY(`courseId`, `url`), FOREIGN KEY(`courseId`) REFERENCES `CourseSyncSettingsEntity`(`courseId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "courseId",
            "url"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseSyncSettingsEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "courseId"
            ]
          }
        ]
      },
      {
        "tableName": "CourseGradingPeriodEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseId` INTEGER NOT NULL, `gradingPeriodId` INTEGER NOT NULL, PRIMARY KEY(`courseId`, `gradingPeriodId`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`gradingPeriodId`) REFERENCES `GradingPeriodEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "gradingPeriodId",
            "columnName": "gradingPeriodId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "courseId",
            "gradingPeriodId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "GradingPeriodEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "gradingPeriodId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "CourseSettingsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseId` INTEGER NOT NULL, `courseSummary` INTEGER, `restrictQuantitativeData` INTEGER NOT NULL, PRIMARY KEY(`courseId`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseSummary",
            "columnName": "courseSummary",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "restrictQuantitativeData",
            "columnName": "restrictQuantitativeData",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "courseId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "CourseSyncSettingsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseId` INTEGER NOT NULL, `courseName` TEXT NOT NULL, `fullContentSync` INTEGER NOT NULL, `tabs` TEXT NOT NULL, `fullFileSync` INTEGER NOT NULL, PRIMARY KEY(`courseId`))",
        "fields": [
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseName",
            "columnName": "courseName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fullContentSync",
            "columnName": "fullContentSync",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tabs",
            "columnName": "tabs",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fullFileSync",
            "columnName": "fullFileSync",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "courseId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DashboardCardEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `isK5Subject` INTEGER NOT NULL, `shortName` TEXT, `originalName` TEXT, `courseCode` TEXT, `position` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isK5Subject",
            "columnName": "isK5Subject",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shortName",
            "columnName": "shortName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "originalName",
            "columnName": "originalName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseCode",
            "columnName": "courseCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionEntryAttachmentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`discussionEntryId` INTEGER NOT NULL, `remoteFileId` INTEGER NOT NULL, PRIMARY KEY(`discussionEntryId`, `remoteFileId`), FOREIGN KEY(`discussionEntryId`) REFERENCES `DiscussionEntryEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`remoteFileId`) REFERENCES `RemoteFileEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "discussionEntryId",
            "columnName": "discussionEntryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "remoteFileId",
            "columnName": "remoteFileId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "discussionEntryId",
            "remoteFileId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "DiscussionEntryEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "discussionEntryId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "RemoteFileEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "remoteFileId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "DiscussionEntryEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `unread` INTEGER NOT NULL, `updatedAt` TEXT, `createdAt` TEXT, `authorId` INTEGER, `description` TEXT, `userId` INTEGER NOT NULL, `parentId` INTEGER NOT NULL, `message` TEXT, `deleted` INTEGER NOT NULL, `totalChildren` INTEGER NOT NULL, `unreadChildren` INTEGER NOT NULL, `ratingCount` INTEGER NOT NULL, `ratingSum` INTEGER NOT NULL, `editorId` INTEGER NOT NULL, `_hasRated` INTEGER NOT NULL, `replyIds` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unread",
            "columnName": "unread",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deleted",
            "columnName": "deleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalChildren",
            "columnName": "totalChildren",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unreadChildren",
            "columnName": "unreadChildren",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ratingCount",
            "columnName": "ratingCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ratingSum",
            "columnName": "ratingSum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "editorId",
            "columnName": "editorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "_hasRated",
            "columnName": "_hasRated",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "replyIds",
            "columnName": "replyIds",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionParticipantEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `displayName` TEXT, `pronouns` TEXT, `avatarImageUrl` TEXT, `htmlUrl` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pronouns",
            "columnName": "pronouns",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatarImageUrl",
            "columnName": "avatarImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionTopicHeaderEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `courseId` INTEGER NOT NULL, `discussionType` TEXT, `title` TEXT, `message` TEXT, `htmlUrl` TEXT, `postedDate` INTEGER, `delayedPostDate` INTEGER, `lastReplyDate` INTEGER, `requireInitialPost` INTEGER NOT NULL, `discussionSubentryCount` INTEGER NOT NULL, `readState` TEXT, `unreadCount` INTEGER NOT NULL, `position` INTEGER NOT NULL, `assignmentId` INTEGER, `locked` INTEGER NOT NULL, `lockedForUser` INTEGER NOT NULL, `lockExplanation` TEXT, `pinned` INTEGER NOT NULL, `authorId` INTEGER, `podcastUrl` TEXT, `groupCategoryId` TEXT, `announcement` INTEGER NOT NULL, `permissionId` INTEGER, `published` INTEGER NOT NULL, `allowRating` INTEGER NOT NULL, `onlyGradersCanRate` INTEGER NOT NULL, `sortByRating` INTEGER NOT NULL, `subscribed` INTEGER NOT NULL, `lockAt` INTEGER, `userCanSeePosts` INTEGER NOT NULL, `specificSections` TEXT, `anonymousState` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`authorId`) REFERENCES `DiscussionParticipantEntity`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`permissionId`) REFERENCES `DiscussionTopicPermissionEntity`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionType",
            "columnName": "discussionType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "postedDate",
            "columnName": "postedDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "delayedPostDate",
            "columnName": "delayedPostDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastReplyDate",
            "columnName": "lastReplyDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "requireInitialPost",
            "columnName": "requireInitialPost",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionSubentryCount",
            "columnName": "discussionSubentryCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "readState",
            "columnName": "readState",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unreadCount",
            "columnName": "unreadCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "locked",
            "columnName": "locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockedForUser",
            "columnName": "lockedForUser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockExplanation",
            "columnName": "lockExplanation",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pinned",
            "columnName": "pinned",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "podcastUrl",
            "columnName": "podcastUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "groupCategoryId",
            "columnName": "groupCategoryId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "announcement",
            "columnName": "announcement",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "permissionId",
            "columnName": "permissionId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "published",
            "columnName": "published",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allowRating",
            "columnName": "allowRating",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "onlyGradersCanRate",
            "columnName": "onlyGradersCanRate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sortByRating",
            "columnName": "sortByRating",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "subscribed",
            "columnName": "subscribed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockAt",
            "columnName": "lockAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "userCanSeePosts",
            "columnName": "userCanSeePosts",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "specificSections",
            "columnName": "specificSections",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "anonymousState",
            "columnName": "anonymousState",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "DiscussionParticipantEntity",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "authorId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "DiscussionTopicPermissionEntity",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "permissionId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "DiscussionTopicPermissionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `discussionTopicHeaderId` INTEGER NOT NULL, `attach` INTEGER NOT NULL, `update` INTEGER NOT NULL, `delete` INTEGER NOT NULL, `reply` INTEGER NOT NULL, FOREIGN KEY(`discussionTopicHeaderId`) REFERENCES `DiscussionTopicHeaderEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionTopicHeaderId",
            "columnName": "discussionTopicHeaderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attach",
            "columnName": "attach",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "update",
            "columnName": "update",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "delete",
            "columnName": "delete",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reply",
            "columnName": "reply",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "DiscussionTopicHeaderEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "discussionTopicHeaderId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "DiscussionTopicRemoteFileEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`discussionId` INTEGER NOT NULL, `remoteFileId` INTEGER NOT NULL, PRIMARY KEY(`discussionId`, `remoteFileId`), FOREIGN KEY(`discussionId`) REFERENCES `DiscussionTopicHeaderEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`remoteFileId`) REFERENCES `RemoteFileEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "discussionId",
            "columnName": "discussionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "remoteFileId",
            "columnName": "remoteFileId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "discussionId",
            "remoteFileId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "DiscussionTopicHeaderEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "discussionId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "RemoteFileEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "remoteFileId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "DiscussionTopicSectionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`discussionTopicId` INTEGER NOT NULL, `sectionId` INTEGER NOT NULL, PRIMARY KEY(`discussionTopicId`, `sectionId`), FOREIGN KEY(`discussionTopicId`) REFERENCES `DiscussionTopicHeaderEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`sectionId`) REFERENCES `SectionEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "discussionTopicId",
            "columnName": "discussionTopicId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sectionId",
            "columnName": "sectionId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "discussionTopicId",
            "sectionId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "DiscussionTopicHeaderEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "discussionTopicId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "SectionEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "sectionId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "EnrollmentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `role` TEXT NOT NULL, `type` TEXT NOT NULL, `courseId` INTEGER, `courseSectionId` INTEGER, `enrollmentState` TEXT, `userId` INTEGER NOT NULL, `computedCurrentScore` REAL, `computedFinalScore` REAL, `computedCurrentGrade` TEXT, `computedFinalGrade` TEXT, `multipleGradingPeriodsEnabled` INTEGER NOT NULL, `totalsForAllGradingPeriodsOption` INTEGER NOT NULL, `currentPeriodComputedCurrentScore` REAL, `currentPeriodComputedFinalScore` REAL, `currentPeriodComputedCurrentGrade` TEXT, `currentPeriodComputedFinalGrade` TEXT, `currentGradingPeriodId` INTEGER NOT NULL, `currentGradingPeriodTitle` TEXT, `associatedUserId` INTEGER NOT NULL, `lastActivityAt` INTEGER, `limitPrivilegesToCourseSection` INTEGER NOT NULL, `observedUserId` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`observedUserId`) REFERENCES `UserEntity`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`courseSectionId`) REFERENCES `SectionEntity`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "courseSectionId",
            "columnName": "courseSectionId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "enrollmentState",
            "columnName": "enrollmentState",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "computedCurrentScore",
            "columnName": "computedCurrentScore",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "computedFinalScore",
            "columnName": "computedFinalScore",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "computedCurrentGrade",
            "columnName": "computedCurrentGrade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "computedFinalGrade",
            "columnName": "computedFinalGrade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "multipleGradingPeriodsEnabled",
            "columnName": "multipleGradingPeriodsEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalsForAllGradingPeriodsOption",
            "columnName": "totalsForAllGradingPeriodsOption",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "currentPeriodComputedCurrentScore",
            "columnName": "currentPeriodComputedCurrentScore",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currentPeriodComputedFinalScore",
            "columnName": "currentPeriodComputedFinalScore",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currentPeriodComputedCurrentGrade",
            "columnName": "currentPeriodComputedCurrentGrade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "currentPeriodComputedFinalGrade",
            "columnName": "currentPeriodComputedFinalGrade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "currentGradingPeriodId",
            "columnName": "currentGradingPeriodId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "currentGradingPeriodTitle",
            "columnName": "currentGradingPeriodTitle",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "associatedUserId",
            "columnName": "associatedUserId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastActivityAt",
            "columnName": "lastActivityAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "limitPrivilegesToCourseSection",
            "columnName": "limitPrivilegesToCourseSection",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "observedUserId",
            "columnName": "observedUserId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "UserEntity",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "observedUserId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "SectionEntity",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseSectionId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "FileFolderEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `createdDate` INTEGER, `updatedDate` INTEGER, `unlockDate` INTEGER, `lockDate` INTEGER, `isLocked` INTEGER NOT NULL, `isHidden` INTEGER NOT NULL, `isLockedForUser` INTEGER NOT NULL, `isHiddenForUser` INTEGER NOT NULL, `folderId` INTEGER NOT NULL, `size` INTEGER NOT NULL, `contentType` TEXT, `url` TEXT, `displayName` TEXT, `thumbnailUrl` TEXT, `parentFolderId` INTEGER NOT NULL, `contextId` INTEGER NOT NULL, `filesCount` INTEGER NOT NULL, `position` INTEGER NOT NULL, `foldersCount` INTEGER NOT NULL, `contextType` TEXT, `name` TEXT, `foldersUrl` TEXT, `filesUrl` TEXT, `fullName` TEXT, `forSubmissions` INTEGER NOT NULL, `canUpload` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdDate",
            "columnName": "createdDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedDate",
            "columnName": "updatedDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "unlockDate",
            "columnName": "unlockDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lockDate",
            "columnName": "lockDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isLocked",
            "columnName": "isLocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isHidden",
            "columnName": "isHidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isLockedForUser",
            "columnName": "isLockedForUser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isHiddenForUser",
            "columnName": "isHiddenForUser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "folderId",
            "columnName": "folderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parentFolderId",
            "columnName": "parentFolderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextId",
            "columnName": "contextId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "filesCount",
            "columnName": "filesCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "foldersCount",
            "columnName": "foldersCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextType",
            "columnName": "contextType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "foldersUrl",
            "columnName": "foldersUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "filesUrl",
            "columnName": "filesUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "forSubmissions",
            "columnName": "forSubmissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "canUpload",
            "columnName": "canUpload",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "EditDashboardItemEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseId` INTEGER NOT NULL, `name` TEXT NOT NULL, `isFavorite` INTEGER NOT NULL, `enrollmentState` TEXT NOT NULL, `position` INTEGER NOT NULL, PRIMARY KEY(`courseId`))",
        "fields": [
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "enrollmentState",
            "columnName": "enrollmentState",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "courseId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ExternalToolAttributesEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`assignmentId` INTEGER NOT NULL, `url` TEXT, `newTab` INTEGER NOT NULL, `resourceLinkid` TEXT, `contentId` INTEGER, PRIMARY KEY(`assignmentId`), FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "newTab",
            "columnName": "newTab",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "resourceLinkid",
            "columnName": "resourceLinkid",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "assignmentId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "GradesEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`enrollmentId` INTEGER NOT NULL, `htmlUrl` TEXT NOT NULL, `currentScore` REAL, `finalScore` REAL, `currentGrade` TEXT, `finalGrade` TEXT, PRIMARY KEY(`enrollmentId`), FOREIGN KEY(`enrollmentId`) REFERENCES `EnrollmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "enrollmentId",
            "columnName": "enrollmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "currentScore",
            "columnName": "currentScore",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "finalScore",
            "columnName": "finalScore",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currentGrade",
            "columnName": "currentGrade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "finalGrade",
            "columnName": "finalGrade",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "enrollmentId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "EnrollmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "enrollmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "GradingPeriodEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `title` TEXT, `startDate` TEXT, `endDate` TEXT, `weight` REAL NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "weight",
            "columnName": "weight",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "GroupEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT, `description` TEXT, `avatarUrl` TEXT, `isPublic` INTEGER NOT NULL, `membersCount` INTEGER NOT NULL, `joinLevel` TEXT, `courseId` INTEGER NOT NULL, `accountId` INTEGER NOT NULL, `role` TEXT, `groupCategoryId` INTEGER NOT NULL, `storageQuotaMb` INTEGER NOT NULL, `isFavorite` INTEGER NOT NULL, `concluded` INTEGER NOT NULL, `canAccess` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatarUrl",
            "columnName": "avatarUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isPublic",
            "columnName": "isPublic",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "membersCount",
            "columnName": "membersCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "joinLevel",
            "columnName": "joinLevel",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "groupCategoryId",
            "columnName": "groupCategoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "storageQuotaMb",
            "columnName": "storageQuotaMb",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "concluded",
            "columnName": "concluded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "canAccess",
            "columnName": "canAccess",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "GroupUserEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `groupId` INTEGER NOT NULL, `userId` INTEGER NOT NULL, FOREIGN KEY(`groupId`) REFERENCES `GroupEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupId",
            "columnName": "groupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "GroupEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "groupId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LocalFileEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `courseId` INTEGER NOT NULL, `createdDate` INTEGER NOT NULL, `path` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdDate",
            "columnName": "createdDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "path",
            "columnName": "path",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "MasteryPathAssignmentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `assignmentId` INTEGER NOT NULL, `createdAt` TEXT, `updatedAt` TEXT, `overrideId` INTEGER NOT NULL, `assignmentSetId` INTEGER NOT NULL, `position` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`assignmentSetId`) REFERENCES `AssignmentSetEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "overrideId",
            "columnName": "overrideId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentSetId",
            "columnName": "assignmentSetId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentSetEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentSetId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "MasteryPathEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `isLocked` INTEGER NOT NULL, `selectedSetId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`id`) REFERENCES `ModuleItemEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isLocked",
            "columnName": "isLocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "selectedSetId",
            "columnName": "selectedSetId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "ModuleItemEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ModuleContentDetailsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `pointsPossible` TEXT, `dueAt` TEXT, `unlockAt` TEXT, `lockAt` TEXT, `lockedForUser` INTEGER NOT NULL, `lockExplanation` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`id`) REFERENCES `ModuleItemEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pointsPossible",
            "columnName": "pointsPossible",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dueAt",
            "columnName": "dueAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockAt",
            "columnName": "lockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockedForUser",
            "columnName": "lockedForUser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockExplanation",
            "columnName": "lockExplanation",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "ModuleItemEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ModuleItemEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `moduleId` INTEGER NOT NULL, `position` INTEGER NOT NULL, `title` TEXT, `indent` INTEGER NOT NULL, `type` TEXT, `htmlUrl` TEXT, `url` TEXT, `published` INTEGER, `contentId` INTEGER NOT NULL, `externalUrl` TEXT, `pageUrl` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`moduleId`) REFERENCES `ModuleObjectEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "moduleId",
            "columnName": "moduleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "indent",
            "columnName": "indent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "published",
            "columnName": "published",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "externalUrl",
            "columnName": "externalUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pageUrl",
            "columnName": "pageUrl",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "ModuleObjectEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "moduleId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ModuleObjectEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `position` INTEGER NOT NULL, `name` TEXT, `unlockAt` TEXT, `sequentialProgress` INTEGER NOT NULL, `prerequisiteIds` TEXT, `state` TEXT, `completedAt` TEXT, `published` INTEGER, `itemCount` INTEGER NOT NULL, `itemsUrl` TEXT NOT NULL, `courseId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sequentialProgress",
            "columnName": "sequentialProgress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "prerequisiteIds",
            "columnName": "prerequisiteIds",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "published",
            "columnName": "published",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "itemCount",
            "columnName": "itemCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemsUrl",
            "columnName": "itemsUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "NeedsGradingCountEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`sectionId` INTEGER NOT NULL, `needsGradingCount` INTEGER NOT NULL, PRIMARY KEY(`sectionId`), FOREIGN KEY(`sectionId`) REFERENCES `SectionEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "sectionId",
            "columnName": "sectionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "needsGradingCount",
            "columnName": "needsGradingCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "sectionId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "SectionEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "sectionId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "PageEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `url` TEXT, `title` TEXT, `createdAt` INTEGER, `updatedAt` INTEGER, `hideFromStudents` INTEGER NOT NULL, `status` TEXT, `body` TEXT, `frontPage` INTEGER NOT NULL, `published` INTEGER NOT NULL, `editingRoles` TEXT, `htmlUrl` TEXT, `courseId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "hideFromStudents",
            "columnName": "hideFromStudents",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "frontPage",
            "columnName": "frontPage",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "published",
            "columnName": "published",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "editingRoles",
            "columnName": "editingRoles",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "PlannerOverrideEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `plannableType` TEXT NOT NULL, `plannableId` INTEGER NOT NULL, `dismissed` INTEGER NOT NULL, `markedComplete` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "plannableType",
            "columnName": "plannableType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "plannableId",
            "columnName": "plannableId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dismissed",
            "columnName": "dismissed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "markedComplete",
            "columnName": "markedComplete",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "RemoteFileEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `folderId` INTEGER NOT NULL, `displayName` TEXT, `fileName` TEXT, `contentType` TEXT, `url` TEXT, `size` INTEGER NOT NULL, `createdAt` TEXT, `updatedAt` TEXT, `unlockAt` TEXT, `locked` INTEGER NOT NULL, `hidden` INTEGER NOT NULL, `lockAt` TEXT, `hiddenForUser` INTEGER NOT NULL, `thumbnailUrl` TEXT, `modifiedAt` TEXT, `lockedForUser` INTEGER NOT NULL, `previewUrl` TEXT, `lockExplanation` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "folderId",
            "columnName": "folderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "fileName",
            "columnName": "fileName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "locked",
            "columnName": "locked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hidden",
            "columnName": "hidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockAt",
            "columnName": "lockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hiddenForUser",
            "columnName": "hiddenForUser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "modifiedAt",
            "columnName": "modifiedAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockedForUser",
            "columnName": "lockedForUser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "previewUrl",
            "columnName": "previewUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockExplanation",
            "columnName": "lockExplanation",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "RubricCriterionAssessmentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `assignmentId` INTEGER NOT NULL, `ratingId` TEXT, `points` REAL, `comments` TEXT, PRIMARY KEY(`id`, `assignmentId`), FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ratingId",
            "columnName": "ratingId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "points",
            "columnName": "points",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "comments",
            "columnName": "comments",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "assignmentId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "RubricCriterionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `description` TEXT, `longDescription` TEXT, `points` REAL NOT NULL, `criterionUseRange` INTEGER NOT NULL, `ignoreForScoring` INTEGER NOT NULL, `assignmentId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "longDescription",
            "columnName": "longDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "points",
            "columnName": "points",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "criterionUseRange",
            "columnName": "criterionUseRange",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ignoreForScoring",
            "columnName": "ignoreForScoring",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "RubricCriterionRatingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `description` TEXT, `longDescription` TEXT, `points` REAL NOT NULL, `rubricCriterionId` TEXT NOT NULL, PRIMARY KEY(`id`, `rubricCriterionId`), FOREIGN KEY(`rubricCriterionId`) REFERENCES `RubricCriterionEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "longDescription",
            "columnName": "longDescription",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "points",
            "columnName": "points",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "rubricCriterionId",
            "columnName": "rubricCriterionId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "rubricCriterionId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "RubricCriterionEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "rubricCriterionId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "RubricSettingsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `contextId` INTEGER NOT NULL, `contextType` TEXT, `pointsPossible` REAL NOT NULL, `title` TEXT NOT NULL, `isReusable` INTEGER NOT NULL, `isPublic` INTEGER NOT NULL, `isReadOnly` INTEGER NOT NULL, `freeFormCriterionComments` INTEGER NOT NULL, `hideScoreTotal` INTEGER NOT NULL, `hidePoints` INTEGER NOT NULL, `assignmentId` INTEGER NOT NULL, FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextId",
            "columnName": "contextId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextType",
            "columnName": "contextType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pointsPossible",
            "columnName": "pointsPossible",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isReusable",
            "columnName": "isReusable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPublic",
            "columnName": "isPublic",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isReadOnly",
            "columnName": "isReadOnly",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "freeFormCriterionComments",
            "columnName": "freeFormCriterionComments",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hideScoreTotal",
            "columnName": "hideScoreTotal",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "hidePoints",
            "columnName": "hidePoints",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ScheduleItemAssignmentOverrideEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`assignmentOverrideId` INTEGER NOT NULL, `scheduleItemId` TEXT NOT NULL, PRIMARY KEY(`assignmentOverrideId`, `scheduleItemId`), FOREIGN KEY(`assignmentOverrideId`) REFERENCES `AssignmentOverrideEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`scheduleItemId`) REFERENCES `ScheduleItemEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "assignmentOverrideId",
            "columnName": "assignmentOverrideId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scheduleItemId",
            "columnName": "scheduleItemId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "assignmentOverrideId",
            "scheduleItemId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AssignmentOverrideEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentOverrideId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "ScheduleItemEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "scheduleItemId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ScheduleItemEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `title` TEXT, `description` TEXT, `startAt` TEXT, `endAt` TEXT, `isAllDay` INTEGER NOT NULL, `allDayAt` TEXT, `locationAddress` TEXT, `locationName` TEXT, `htmlUrl` TEXT, `contextCode` TEXT, `effectiveContextCode` TEXT, `isHidden` INTEGER NOT NULL, `importantDates` INTEGER NOT NULL, `assignmentId` INTEGER, `type` TEXT NOT NULL, `itemType` TEXT, `courseId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startAt",
            "columnName": "startAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endAt",
            "columnName": "endAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isAllDay",
            "columnName": "isAllDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allDayAt",
            "columnName": "allDayAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "locationAddress",
            "columnName": "locationAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "locationName",
            "columnName": "locationName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contextCode",
            "columnName": "contextCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "effectiveContextCode",
            "columnName": "effectiveContextCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isHidden",
            "columnName": "isHidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "importantDates",
            "columnName": "importantDates",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "itemType",
            "columnName": "itemType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "SectionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `courseId` INTEGER, `startAt` TEXT, `endAt` TEXT, `totalStudents` INTEGER NOT NULL, `restrictEnrollmentsToSectionDates` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "startAt",
            "columnName": "startAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endAt",
            "columnName": "endAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "totalStudents",
            "columnName": "totalStudents",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "restrictEnrollmentsToSectionDates",
            "columnName": "restrictEnrollmentsToSectionDates",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "SubmissionDiscussionEntryEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`submissionId` INTEGER NOT NULL, `discussionEntryId` INTEGER NOT NULL, PRIMARY KEY(`submissionId`, `discussionEntryId`), FOREIGN KEY(`discussionEntryId`) REFERENCES `DiscussionEntryEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "submissionId",
            "columnName": "submissionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "discussionEntryId",
            "columnName": "discussionEntryId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "submissionId",
            "discussionEntryId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "DiscussionEntryEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "discussionEntryId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "SubmissionEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `grade` TEXT, `score` REAL NOT NULL, `attempt` INTEGER NOT NULL, `submittedAt` INTEGER, `commentCreated` INTEGER, `mediaContentType` TEXT, `mediaCommentUrl` TEXT, `mediaCommentDisplay` TEXT, `body` TEXT, `isGradeMatchesCurrentSubmission` INTEGER NOT NULL, `workflowState` TEXT, `submissionType` TEXT, `previewUrl` TEXT, `url` TEXT, `late` INTEGER NOT NULL, `excused` INTEGER NOT NULL, `missing` INTEGER NOT NULL, `mediaCommentId` TEXT, `assignmentId` INTEGER NOT NULL, `userId` INTEGER, `graderId` INTEGER, `groupId` INTEGER, `pointsDeducted` REAL, `enteredScore` REAL NOT NULL, `enteredGrade` TEXT, `postedAt` INTEGER, `gradingPeriodId` INTEGER, PRIMARY KEY(`id`, `attempt`), FOREIGN KEY(`groupId`) REFERENCES `GroupEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`userId`) REFERENCES `UserEntity`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "grade",
            "columnName": "grade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "score",
            "columnName": "score",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "attempt",
            "columnName": "attempt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "submittedAt",
            "columnName": "submittedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "commentCreated",
            "columnName": "commentCreated",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "mediaContentType",
            "columnName": "mediaContentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mediaCommentUrl",
            "columnName": "mediaCommentUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mediaCommentDisplay",
            "columnName": "mediaCommentDisplay",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "body",
            "columnName": "body",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isGradeMatchesCurrentSubmission",
            "columnName": "isGradeMatchesCurrentSubmission",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workflowState",
            "columnName": "workflowState",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "submissionType",
            "columnName": "submissionType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "previewUrl",
            "columnName": "previewUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "late",
            "columnName": "late",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "excused",
            "columnName": "excused",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "missing",
            "columnName": "missing",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mediaCommentId",
            "columnName": "mediaCommentId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "graderId",
            "columnName": "graderId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "groupId",
            "columnName": "groupId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pointsDeducted",
            "columnName": "pointsDeducted",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "enteredScore",
            "columnName": "enteredScore",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "enteredGrade",
            "columnName": "enteredGrade",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "postedAt",
            "columnName": "postedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "gradingPeriodId",
            "columnName": "gradingPeriodId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "attempt"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "GroupEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "groupId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "UserEntity",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "SyncSettingsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `autoSyncEnabled` INTEGER NOT NULL, `syncFrequency` TEXT NOT NULL, `wifiOnly` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "autoSyncEnabled",
            "columnName": "autoSyncEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "syncFrequency",
            "columnName": "syncFrequency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "wifiOnly",
            "columnName": "wifiOnly",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "TabEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `label` TEXT, `type` TEXT NOT NULL, `htmlUrl` TEXT, `externalUrl` TEXT, `visibility` TEXT NOT NULL, `isHidden` INTEGER NOT NULL, `position` INTEGER NOT NULL, `ltiUrl` TEXT NOT NULL, `courseId` INTEGER NOT NULL, PRIMARY KEY(`id`, `courseId`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "label",
            "columnName": "label",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "externalUrl",
            "columnName": "externalUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "visibility",
            "columnName": "visibility",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isHidden",
            "columnName": "isHidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "position",
            "columnName": "position",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ltiUrl",
            "columnName": "ltiUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id",
            "courseId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "TermEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT, `startAt` TEXT, `endAt` TEXT, `isGroupTerm` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startAt",
            "columnName": "startAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endAt",
            "columnName": "endAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isGroupTerm",
            "columnName": "isGroupTerm",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "UserCalendarEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `ics` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ics",
            "columnName": "ics",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "UserEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `name` TEXT NOT NULL, `shortName` TEXT, `loginId` TEXT, `avatarUrl` TEXT, `primaryEmail` TEXT, `email` TEXT, `sortableName` TEXT, `bio` TEXT, `enrollmentIndex` INTEGER NOT NULL, `lastLogin` TEXT, `locale` TEXT, `effective_locale` TEXT, `pronouns` TEXT, `k5User` INTEGER NOT NULL, `rootAccount` TEXT, `isFakeStudent` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "shortName",
            "columnName": "shortName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "loginId",
            "columnName": "loginId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatarUrl",
            "columnName": "avatarUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "primaryEmail",
            "columnName": "primaryEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sortableName",
            "columnName": "sortableName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bio",
            "columnName": "bio",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "enrollmentIndex",
            "columnName": "enrollmentIndex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastLogin",
            "columnName": "lastLogin",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "locale",
            "columnName": "locale",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "effective_locale",
            "columnName": "effective_locale",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pronouns",
            "columnName": "pronouns",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "k5User",
            "columnName": "k5User",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rootAccount",
            "columnName": "rootAccount",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isFakeStudent",
            "columnName": "isFakeStudent",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "QuizEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `title` TEXT, `mobileUrl` TEXT, `htmlUrl` TEXT, `description` TEXT, `quizType` TEXT, `assignmentGroupId` INTEGER NOT NULL, `allowedAttempts` INTEGER NOT NULL, `questionCount` INTEGER NOT NULL, `pointsPossible` TEXT, `isLockQuestionsAfterAnswering` INTEGER NOT NULL, `dueAt` TEXT, `timeLimit` INTEGER NOT NULL, `shuffleAnswers` INTEGER NOT NULL, `showCorrectAnswers` INTEGER NOT NULL, `scoringPolicy` TEXT, `accessCode` TEXT, `ipFilter` TEXT, `lockedForUser` INTEGER NOT NULL, `lockExplanation` TEXT, `hideResults` TEXT, `showCorrectAnswersAt` TEXT, `hideCorrectAnswersAt` TEXT, `unlockAt` TEXT, `oneTimeResults` INTEGER NOT NULL, `lockAt` TEXT, `questionTypes` TEXT NOT NULL, `hasAccessCode` INTEGER NOT NULL, `oneQuestionAtATime` INTEGER NOT NULL, `requireLockdownBrowser` INTEGER NOT NULL, `requireLockdownBrowserForResults` INTEGER NOT NULL, `allowAnonymousSubmissions` INTEGER NOT NULL, `published` INTEGER NOT NULL, `assignmentId` INTEGER NOT NULL, `isOnlyVisibleToOverrides` INTEGER NOT NULL, `unpublishable` INTEGER NOT NULL, `courseId` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mobileUrl",
            "columnName": "mobileUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "quizType",
            "columnName": "quizType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "assignmentGroupId",
            "columnName": "assignmentGroupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allowedAttempts",
            "columnName": "allowedAttempts",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "questionCount",
            "columnName": "questionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pointsPossible",
            "columnName": "pointsPossible",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isLockQuestionsAfterAnswering",
            "columnName": "isLockQuestionsAfterAnswering",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dueAt",
            "columnName": "dueAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timeLimit",
            "columnName": "timeLimit",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shuffleAnswers",
            "columnName": "shuffleAnswers",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "showCorrectAnswers",
            "columnName": "showCorrectAnswers",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "scoringPolicy",
            "columnName": "scoringPolicy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "accessCode",
            "columnName": "accessCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "ipFilter",
            "columnName": "ipFilter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockedForUser",
            "columnName": "lockedForUser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockExplanation",
            "columnName": "lockExplanation",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hideResults",
            "columnName": "hideResults",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "showCorrectAnswersAt",
            "columnName": "showCorrectAnswersAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hideCorrectAnswersAt",
            "columnName": "hideCorrectAnswersAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "oneTimeResults",
            "columnName": "oneTimeResults",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lockAt",
            "columnName": "lockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "questionTypes",
            "columnName": "questionTypes",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hasAccessCode",
            "columnName": "hasAccessCode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "oneQuestionAtATime",
            "columnName": "oneQuestionAtATime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "requireLockdownBrowser",
            "columnName": "requireLockdownBrowser",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "requireLockdownBrowserForResults",
            "columnName": "requireLockdownBrowserForResults",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allowAnonymousSubmissions",
            "columnName": "allowAnonymousSubmissions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "published",
            "columnName": "published",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isOnlyVisibleToOverrides",
            "columnName": "isOnlyVisibleToOverrides",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unpublishable",
            "columnName": "unpublishable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LockInfoEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `modulePrerequisiteNames` TEXT, `unlockAt` TEXT, `lockedModuleId` INTEGER, `assignmentId` INTEGER, `moduleId` INTEGER, `pageId` INTEGER, FOREIGN KEY(`moduleId`) REFERENCES `ModuleContentDetailsEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`assignmentId`) REFERENCES `AssignmentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`pageId`) REFERENCES `PageEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "modulePrerequisiteNames",
            "columnName": "modulePrerequisiteNames",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockedModuleId",
            "columnName": "lockedModuleId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "assignmentId",
            "columnName": "assignmentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "moduleId",
            "columnName": "moduleId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pageId",
            "columnName": "pageId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_LockInfoEntity_lockedModuleId",
            "unique": true,
            "columnNames": [
              "lockedModuleId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_LockInfoEntity_lockedModuleId` ON `${TABLE_NAME}` (`lockedModuleId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "ModuleContentDetailsEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "moduleId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "AssignmentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "assignmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "PageEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pageId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "LockedModuleEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `contextId` INTEGER NOT NULL, `contextType` TEXT, `name` TEXT, `unlockAt` TEXT, `isRequireSequentialProgress` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`id`) REFERENCES `LockInfoEntity`(`lockedModuleId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextId",
            "columnName": "contextId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contextType",
            "columnName": "contextType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "unlockAt",
            "columnName": "unlockAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isRequireSequentialProgress",
            "columnName": "isRequireSequentialProgress",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "LockInfoEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "id"
            ],
            "referencedColumns": [
              "lockedModuleId"
            ]
          }
        ]
      },
      {
        "tableName": "ModuleNameEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT, `lockedModuleId` INTEGER NOT NULL, FOREIGN KEY(`lockedModuleId`) REFERENCES `LockedModuleEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lockedModuleId",
            "columnName": "lockedModuleId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "LockedModuleEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "lockedModuleId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ModuleCompletionRequirementEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `type` TEXT, `minScore` REAL NOT NULL, `maxScore` REAL NOT NULL, `completed` INTEGER, `moduleId` INTEGER NOT NULL, FOREIGN KEY(`moduleId`) REFERENCES `ModuleObjectEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "minScore",
            "columnName": "minScore",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "maxScore",
            "columnName": "maxScore",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "completed",
            "columnName": "completed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "moduleId",
            "columnName": "moduleId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "ModuleObjectEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "moduleId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "FileSyncSettingsEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `fileName` TEXT, `courseId` INTEGER NOT NULL, `url` TEXT, PRIMARY KEY(`id`), FOREIGN KEY(`courseId`) REFERENCES `CourseSyncSettingsEntity`(`courseId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileName",
            "columnName": "fileName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseSyncSettingsEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "courseId"
            ]
          }
        ]
      },
      {
        "tableName": "ConferenceEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `courseId` INTEGER NOT NULL, `conferenceKey` TEXT, `conferenceType` TEXT, `description` TEXT, `duration` INTEGER NOT NULL, `endedAt` INTEGER, `hasAdvancedSettings` INTEGER NOT NULL, `joinUrl` TEXT, `longRunning` INTEGER NOT NULL, `startedAt` INTEGER, `title` TEXT, `url` TEXT, `contextType` TEXT NOT NULL, `contextId` INTEGER NOT NULL, `record` INTEGER, `users` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`courseId`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "conferenceKey",
            "columnName": "conferenceKey",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "conferenceType",
            "columnName": "conferenceType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endedAt",
            "columnName": "endedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "hasAdvancedSettings",
            "columnName": "hasAdvancedSettings",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "joinUrl",
            "columnName": "joinUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "longRunning",
            "columnName": "longRunning",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "startedAt",
            "columnName": "startedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contextType",
            "columnName": "contextType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "contextId",
            "columnName": "contextId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "record",
            "columnName": "record",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "users",
            "columnName": "users",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ConferenceRecordingEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`recordingId` TEXT NOT NULL, `conferenceId` INTEGER NOT NULL, `createdAtMillis` INTEGER NOT NULL, `durationMinutes` INTEGER NOT NULL, `playbackUrl` TEXT, `title` TEXT NOT NULL, PRIMARY KEY(`recordingId`), FOREIGN KEY(`conferenceId`) REFERENCES `ConferenceEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "recordingId",
            "columnName": "recordingId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "conferenceId",
            "columnName": "conferenceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAtMillis",
            "columnName": "createdAtMillis",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "durationMinutes",
            "columnName": "durationMinutes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "playbackUrl",
            "columnName": "playbackUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "recordingId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "ConferenceEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "conferenceId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "CourseFeaturesEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `features` TEXT NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`id`) REFERENCES `CourseEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "features",
            "columnName": "features",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "AttachmentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `contentType` TEXT, `filename` TEXT, `displayName` TEXT, `url` TEXT, `thumbnailUrl` TEXT, `previewUrl` TEXT, `createdAt` INTEGER, `size` INTEGER NOT NULL, `workerId` TEXT, `submissionCommentId` INTEGER, `submissionId` INTEGER, `attempt` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY(`submissionCommentId`) REFERENCES `SubmissionCommentEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "filename",
            "columnName": "filename",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "thumbnailUrl",
            "columnName": "thumbnailUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "previewUrl",
            "columnName": "previewUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workerId",
            "columnName": "workerId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "submissionCommentId",
            "columnName": "submissionCommentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "submissionId",
            "columnName": "submissionId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attempt",
            "columnName": "attempt",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "SubmissionCommentEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "submissionCommentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "MediaCommentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`mediaId` TEXT NOT NULL, `submissionId` INTEGER NOT NULL, `attemptId` INTEGER NOT NULL, `displayName` TEXT, `url` TEXT, `mediaType` TEXT, `contentType` TEXT, PRIMARY KEY(`mediaId`), FOREIGN KEY(`submissionId`, `attemptId`) REFERENCES `SubmissionEntity`(`id`, `attempt`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "mediaId",
            "columnName": "mediaId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "submissionId",
            "columnName": "submissionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attemptId",
            "columnName": "attemptId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mediaType",
            "columnName": "mediaType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "mediaId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "SubmissionEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "submissionId",
              "attemptId"
            ],
            "referencedColumns": [
              "id",
              "attempt"
            ]
          }
        ]
      },
      {
        "tableName": "AuthorEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `displayName` TEXT, `avatarImageUrl` TEXT, `htmlUrl` TEXT, `pronouns` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "avatarImageUrl",
            "columnName": "avatarImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "pronouns",
            "columnName": "pronouns",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "SubmissionCommentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `authorId` INTEGER NOT NULL, `authorName` TEXT, `authorPronouns` TEXT, `comment` TEXT, `createdAt` INTEGER, `mediaCommentId` TEXT, `attemptId` INTEGER, `submissionId` INTEGER, PRIMARY KEY(`id`), FOREIGN KEY(`submissionId`, `attemptId`) REFERENCES `SubmissionEntity`(`id`, `attempt`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorId",
            "columnName": "authorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "authorName",
            "columnName": "authorName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "authorPronouns",
            "columnName": "authorPronouns",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "mediaCommentId",
            "columnName": "mediaCommentId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attemptId",
            "columnName": "attemptId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "submissionId",
            "columnName": "submissionId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "SubmissionEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "submissionId",
              "attemptId"
            ],
            "referencedColumns": [
              "id",
              "attempt"
            ]
          }
        ]
      },
      {
        "tableName": "DiscussionTopicEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `unreadEntries` TEXT NOT NULL, `participantIds` TEXT NOT NULL, `viewIds` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unreadEntries",
            "columnName": "unreadEntries",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "participantIds",
            "columnName": "participantIds",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "viewIds",
            "columnName": "viewIds",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseSyncProgressEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseId` INTEGER NOT NULL, `workerId` TEXT NOT NULL, `courseName` TEXT NOT NULL, `tabs` TEXT NOT NULL, `additionalFilesStarted` INTEGER NOT NULL, `progressState` TEXT NOT NULL, PRIMARY KEY(`courseId`))",
        "fields": [
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workerId",
            "columnName": "workerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseName",
            "columnName": "courseName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tabs",
            "columnName": "tabs",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "additionalFilesStarted",
            "columnName": "additionalFilesStarted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "progressState",
            "columnName": "progressState",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "courseId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "FileSyncProgressEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`workerId` TEXT NOT NULL, `courseId` INTEGER NOT NULL, `fileName` TEXT NOT NULL, `progress` INTEGER NOT NULL, `fileSize` INTEGER NOT NULL, `additionalFile` INTEGER NOT NULL, `progressState` TEXT NOT NULL, `fileId` INTEGER NOT NULL, PRIMARY KEY(`workerId`), FOREIGN KEY(`courseId`) REFERENCES `CourseSyncProgressEntity`(`courseId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "workerId",
            "columnName": "workerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileName",
            "columnName": "fileName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fileSize",
            "columnName": "fileSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "additionalFile",
            "columnName": "additionalFile",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "progressState",
            "columnName": "progressState",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fileId",
            "columnName": "fileId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "workerId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "CourseSyncProgressEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "courseId"
            ],
            "referencedColumns": [
              "courseId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'f792290082e6cf2f70533d168ec4901b')"
    ]
  }
}