apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.apollographql.apollo'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath Plugins.KOTLIN
        classpath 'com.apollographql.apollo:apollo-gradle-plugin:2.5.9'
    }
}

repositories {
    mavenCentral()
}

apollo {
    useJavaBeansSemanticNaming = true
    customTypeMapping = [
            "URL" : "java.lang.String",
            "DateTime": "java.util.Date",
            "ID"  : "java.lang.String"
    ]
}

dependencies {
    /* Kotlin */
    implementation Libs.KOTLIN_STD_LIB

    /* Networking */
    implementation Libs.RETROFIT
    implementation Libs.RETROFIT_GSON_ADAPTER
    implementation Libs.RETROFIT_SCALAR_CONVERTER
    implementation Libs.OKHTTP
    implementation Libs.OKHTTP_LOGGING

    /* Serialization */
    implementation Libs.GSON

    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'com.github.javafaker:javafaker:0.17.2'
    implementation 'com.apollographql.apollo:apollo-runtime:2.5.9'
    implementation 'com.apollographql.apollo:apollo-coroutines-support:2.5.9'


    /* Test Dependencies */
    testImplementation Libs.JUNIT
}

task addPrivateData {
    doLast { // execution phase
        PrivateData.merge(project, "dataseeding")
    }
}

compileKotlin.dependsOn(addPrivateData)


task customClean {
    finalizedBy {
        addPrivateData
    }
}

clean.dependsOn(customClean)
