apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.apollographql.apollo'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath Plugins.KOTLIN
        classpath Libs.APOLLO_RUNTIME
    }
}

repositories {
    mavenCentral()
}

apollo {
    service("canvas") {
        packageName.set("com.instructure.dataseedingapi")
        mapScalar("URL", "kotlin.String")
        mapScalar("DateTime", "java.util.Date")
        mapScalar("ID", "kotlin.String")
    }
}

dependencies {
    /* Kotlin */
    implementation Libs.KOTLIN_STD_LIB

    /* Networking */
    implementation Libs.RETROFIT
    implementation Libs.RETROFIT_GSON_ADAPTER
    implementation Libs.RETROFIT_SCALAR_CONVERTER
    implementation Libs.OKHTTP
    implementation Libs.OKHTTP_LOGGING

    /* Serialization */
    implementation Libs.GSON

    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'com.github.javafaker:javafaker:0.17.2'
    implementation Libs.APOLLO_RUNTIME


    /* Test Dependencies */
    testImplementation Libs.JUNIT
}

task addPrivateData {
    doLast { // execution phase
        PrivateData.merge(project, "dataseeding")
    }
}

tasks.named('compileKotlin') {
    kotlinOptions {
        jvmTarget = '17'
    }
    dependsOn addPrivateData
    dependsOn generateApolloSources
}

task customClean {
    finalizedBy {
        addPrivateData
    }
}

clean.dependsOn(customClean)
